PRIMEIRA VERSÃO: V0.0.1


SISTEMA BANCARIO:

-saque
-deposito 
-visualização de extrato
- a v1 do projeto trabalha apenas com 1 usuario

REGRA:

1.Operação de Depósito:

-O sistema deve perguntar ao usuário qual valor ele deseja depositar.
-O valor do depósito deve ser um número inteiro e positivo.
Todos os depósitos devem ser armazenados em uma variável.
-Os depósitos devem ser exibidos na operação de extrato.

2.Operação de Saque:

-O sistema deve permitir até 3 saques diários.
-Cada saque tem um limite máximo de R$ 500,00.
-O sistema deve verificar se há saldo suficiente para realizar o saque.
-Todos os saques devem ser armazenados em uma variável.
Os saques devem ser exibidos na operação de extrato.

3.Operação de Extrato:

-A operação de extrato deve listar todos os depósitos e saques realizados na conta.
-No final da listagem, deve ser exibido o saldo atual da conta.
-Os valores devem ser exibidos no formato "R$ xxx.xx".


----------------------------------------------------------------------------------------------------------
SEGUNDA VERSÃO:0.1.0

Funções Existentes

Saque
    Requisitos:

    Receber os argumentos apenas por nome (keyword only).
    Sugestão de argumentos: saldo, valor, extrato, limite, numero_saques, limite_saques.
    Sugestão de retorno: saldo e extrato.

Depósito
    Requisitos:
    Receber os argumentos apenas por posição (positional only).
    Sugestão de argumentos: saldo, valor, extrato.
    Sugestão de retorno: saldo e extrato.

Extrato
    Requisitos:
    Receber os argumentos por posição e nome (positional only e keyword only).
    Argumentos posicionais: saldo.
    Argumentos nomeados: extrato.

Novas Funções

Criar Usuário
    Requisitos:
    Deve armazenar os usuários em uma lista.
    Um usuário é composto por: nome, data de nascimento, CPF e endereço.
    O endereço é uma string com o formato: "logradouro, nro - bairro - cidade/sigla estado".
    Deve ser armazenado somente os números do CPF.
    Não pode haver dois usuários com o mesmo CPF.
Criar Conta Corrente
    Requisitos:

    O programa deve armazenar contas em uma lista.
    A conta é composta por: agência, número da conta e usuário.
    O número da conta é sequencial, iniciado em 1.
    O número da agência é fixo: "0001".
    O usuário pode ter mais de uma conta, mas uma conta pertence a somente um usuário.
    O número da conta vai aumentando de um em um conforme novas contas são criadas.
    Vincular Usuário a Conta:

    Para vincular um usuário a uma conta, filtre a lista de usuários buscando o número do CPF 
    informado para cada usuário da lista.

----------------------------------------------------------------------------------------------------------
SEGUNDA VERSÃO:0.2.0

Atualização da implementação do sistema bancário para armazenar os dados de clientes e contas bancárias em objetos,
seguindo o modelo de classes UML fornecido. Esta atualização inclui a modelagem de classes, a criação de métodos e 
a atualização dos métodos que lidam com as opções do menu para funcionar com as classes modeladas.

ATUALIZAÇÕES:

-Cadastro de conta.
-Conta tem vínculo com usuário.
-A conta tem histórico.
-O extrato é por conta e não geral.

----------------------------------------------------------------------------------------------------------
TERCEIRA VERSÃO:0.3.0

Com os novos conhecimentos adquiridossobre decoradores, geradores e iteradores, vamos iplementar as
seguintes funcionalidade no sistema:

- Decorador de log  - V
- Gerador de relatorios -
- Iterador personalizado

Decorador de log:

Implementar um decorador que seja aplicado a todas as funções de transação(depósito, saque, criação de conta, etc).
Esse decorador deve registrar(printar) a data e hora de cada transação, bem como o tipo de transação.

Gerador de relatorios:

Crie um gerador que permita iterar sobre as transações de uma conta e retorne, uma a uma, as transações que foram
realizadas. Esses gerador deve também ter uma forma de filtrar as transações baseado em seu tipo (por exemplo, apenas saques 
ou apenas depósitos)

Iterador personalizado:

Implemente um iterador personalizado "ContaIterador" que permita iterar sobre todas as contas do banco, retornando informações
básicas de cada conta(número, saldo atual, etc).


***********
novas funcionalidade implementadas:
-Estabelecer um limite de 10 transações diárias para uma conta.

-Se o usuário tentar fazer uma transação após atingir o limite, deve ser
informado que ele excedeu o número de transações permitidas para aquele dia.

-Mostre no extrato,  a data e hora de todas as transações.